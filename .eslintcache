[{"D:\\React Js\\New\\boxoffice\\src\\index.js":"1","D:\\React Js\\New\\boxoffice\\src\\App.js":"2","D:\\React Js\\New\\boxoffice\\src\\reportWebVitals.js":"3","D:\\React Js\\New\\boxoffice\\src\\components\\Nav.js":"4","D:\\React Js\\New\\boxoffice\\src\\pages\\Starred.js":"5","D:\\React Js\\New\\boxoffice\\src\\pages\\Home.js":"6","D:\\React Js\\New\\boxoffice\\src\\components\\MainPageLayout.js":"7","D:\\React Js\\New\\boxoffice\\src\\components\\Title.js":"8","D:\\React Js\\New\\boxoffice\\src\\misc\\config.js":"9","D:\\React Js\\New\\boxoffice\\src\\components\\show\\ShowGrid.js":"10","D:\\React Js\\New\\boxoffice\\src\\components\\show\\ShowCards.js":"11","D:\\React Js\\New\\boxoffice\\src\\components\\actor\\ActorGrid.js":"12","D:\\React Js\\New\\boxoffice\\src\\components\\actor\\ActorCard.js":"13","D:\\React Js\\New\\boxoffice\\src\\components\\Style.js":"14","D:\\React Js\\New\\boxoffice\\src\\components\\show\\ShowCard.style.js":"15","D:\\React Js\\New\\boxoffice\\src\\components\\actor\\ActorCard.style.js":"16","D:\\React Js\\New\\boxoffice\\src\\pages\\Show.js":"17","D:\\React Js\\New\\boxoffice\\src\\components\\show\\Details.js":"18","D:\\React Js\\New\\boxoffice\\src\\components\\show\\Season.js":"19","D:\\React Js\\New\\boxoffice\\src\\components\\show\\Cast.js":"20","D:\\React Js\\New\\boxoffice\\src\\components\\show\\ShowMainData.js":"21","D:\\React Js\\New\\boxoffice\\src\\pages\\Show.styled.js":"22","D:\\React Js\\New\\boxoffice\\src\\components\\show\\ShowMainData.style.js":"23","D:\\React Js\\New\\boxoffice\\src\\components\\show\\Details.style.js":"24","D:\\React Js\\New\\boxoffice\\src\\components\\show\\Seasons.Style.js":"25","D:\\React Js\\New\\boxoffice\\src\\components\\show\\Cast.style.js":"26","D:\\React Js\\New\\boxoffice\\src\\misc\\custom-hooks.js":"27"},{"size":531,"mtime":1611847489890,"results":"28","hashOfConfig":"29"},{"size":492,"mtime":1612685926434,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":477,"mtime":1611849242606,"results":"32","hashOfConfig":"29"},{"size":231,"mtime":1611850340177,"results":"33","hashOfConfig":"29"},{"size":3403,"mtime":1612368824541,"results":"34","hashOfConfig":"29"},{"size":330,"mtime":1611851114315,"results":"35","hashOfConfig":"29"},{"size":205,"mtime":1611851039138,"results":"36","hashOfConfig":"29"},{"size":242,"mtime":1612195982290,"results":"37","hashOfConfig":"29"},{"size":1207,"mtime":1612849305269,"results":"38","hashOfConfig":"29"},{"size":852,"mtime":1612849376136,"results":"39","hashOfConfig":"29"},{"size":818,"mtime":1612023592067,"results":"40","hashOfConfig":"29"},{"size":817,"mtime":1612027343901,"results":"41","hashOfConfig":"29"},{"size":823,"mtime":1612690081739,"results":"42","hashOfConfig":"29"},{"size":1030,"mtime":1612849200768,"results":"43","hashOfConfig":"29"},{"size":208,"mtime":1612027179541,"results":"44","hashOfConfig":"29"},{"size":2982,"mtime":1612689534774,"results":"45","hashOfConfig":"29"},{"size":417,"mtime":1612690473409,"results":"46","hashOfConfig":"29"},{"size":1227,"mtime":1612690762545,"results":"47","hashOfConfig":"29"},{"size":780,"mtime":1612794469039,"results":"48","hashOfConfig":"29"},{"size":954,"mtime":1612849554998,"results":"49","hashOfConfig":"29"},{"size":481,"mtime":1612690647515,"results":"50","hashOfConfig":"29"},{"size":1197,"mtime":1612690091398,"results":"51","hashOfConfig":"29"},{"size":168,"mtime":1612690424920,"results":"52","hashOfConfig":"29"},{"size":575,"mtime":1612690654005,"results":"53","hashOfConfig":"29"},{"size":627,"mtime":1612793844846,"results":"54","hashOfConfig":"29"},{"size":880,"mtime":1612847707795,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"15mw42",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\React Js\\New\\boxoffice\\src\\index.js",[],["113","114","115","116","117"],"D:\\React Js\\New\\boxoffice\\src\\App.js",[],"D:\\React Js\\New\\boxoffice\\src\\reportWebVitals.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\Nav.js",[],"D:\\React Js\\New\\boxoffice\\src\\pages\\Starred.js",[],"D:\\React Js\\New\\boxoffice\\src\\pages\\Home.js",["118","119"],"import React, { useState } from 'react'\r\nimport MainPageLayout from '../components/MainPageLayout'\r\nimport { apiGet } from '../misc/config'\r\nimport ShowGrid from '../components/show/ShowGrid'\r\nimport ActorGrid from '../components/actor/ActorGrid'\r\n\r\nexport default function Home() {\r\n    const [input, setInput] = useState('');\r\n    const [results, setResult] = useState(null);\r\n    const [searchOption, setSearchOption] = useState('shows');\r\n    const isShowsSearch = searchOption === 'shows'\r\n\r\n    // useEffect(()=>{\r\n    //     // compnentdidMount\r\n    //     console.log('component did mount')\r\n    //     // compnent unMount\r\n    //     return()=>{\r\n    //         console.log('component unmount')\r\n    //     }\r\n    // },[])\r\n\r\n    const onInputChange = ev => {\r\n        setInput(ev.target.value)\r\n    }\r\n    const onClickSearch = () => {\r\n\r\n        apiGet(`/search/${searchOption}?q=${input}`).then(result => {\r\n            setResult(result);\r\n            console.log(result);\r\n        });\r\n\r\n        // fetch(`https://api.tvmaze.com/search/shows?q=${input}`)\r\n        // fetch(`https://api.nasa.gov/planetary/apod?api_key=rfFbiDUJ9b6kKtiAAoV4NIBEnMGvscl2jOQ7hIl7`)\r\n        //     .then(r => r.json())\r\n        //     .then(result => {\r\n        //         setResult(result);\r\n        //         console.log(result);\r\n        //     });\r\n\r\n    };\r\n    const onKeyDown = (ev) => {\r\n        if (ev.keyCode === 13) {\r\n            onClickSearch()\r\n        }\r\n        // console.log(ev.keyCode)\r\n    }\r\n    const onRadioChange = (ev) => {\r\n        setSearchOption(ev.target.value)\r\n    }\r\n    console.log(searchOption)\r\n    const renderResults = () => {\r\n        if (results && results.length === 0) {\r\n            return <div>No results</div>\r\n        }\r\n        if (results && results.length > 0) {\r\n            return results[0].show\r\n                ? <ShowGrid data={results} /> : <ActorGrid data={results} />\r\n        }\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <MainPageLayout>\r\n            <input\r\n                type=\"text\"\r\n                placeholder='Search for something'\r\n                onChange={onInputChange}\r\n                value={input}\r\n            />\r\n            <div>\r\n                <label htmlFor=\"shows-search\">\r\n                    Shows\r\n                    <input\r\n                        id=\"shows-search\"\r\n                        type=\"radio\"\r\n                        value=\"shows\"\r\n                        checked={isShowsSearch}\r\n                        onChange={onRadioChange}\r\n                    />\r\n                </label>\r\n                <label htmlFor=\"actors-search\">\r\n                    Actors\r\n                    <input\r\n                        id=\"actors-search\"\r\n                        type=\"radio\"\r\n                        value=\"people\"\r\n                        checked={!isShowsSearch}\r\n                        onChange={onRadioChange}\r\n                    />\r\n                </label>\r\n            </div>\r\n            <button\r\n                type='button'\r\n                onClick={onClickSearch}\r\n                onKeyDown={onKeyDown}>\r\n                Search\r\n                </button>\r\n            {renderResults()}\r\n        </MainPageLayout>\r\n    )\r\n}\r\n\r\n\r\n// fetch(`https://api.tvmaze.com/search/shows?q=${input}`)\r\n// .then(r => r.json())\r\n// .then(result => {\r\n//     setResult(result);\r\n//     console.log(result);\r\n// });","D:\\React Js\\New\\boxoffice\\src\\components\\MainPageLayout.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\Title.js",[],"D:\\React Js\\New\\boxoffice\\src\\misc\\config.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\show\\ShowGrid.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\show\\ShowCards.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\actor\\ActorGrid.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\actor\\ActorCard.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\Style.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\show\\ShowCard.style.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\actor\\ActorCard.style.js",[],"D:\\React Js\\New\\boxoffice\\src\\pages\\Show.js",["120"],"/* eslint-disable no-underscore-dangle */\r\nimport React, { useEffect, useReducer } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { apiGet } from '../misc/config'\r\nimport Details from '../components/show/Details'\r\nimport Season from '../components/show/Season'\r\nimport Cast from '../components/show/Cast'\r\nimport ShowMainData from '../components/show/ShowMainData'\r\nimport { InfoBlock, ShowPageWrapper } from './Show.styled'\r\n\r\nconst reducer = (prevState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_SUCCESS': {\r\n            return { isLoading: false, error: null, show: action.show }\r\n        }\r\n\r\n        case 'FETCH_FAILED': {\r\n            return { ...prevState, isLoading: false, error: action.error, }\r\n        }\r\n        default: return prevState\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    show: \"Component did mount\",\r\n    isLoading: true,\r\n    error: null\r\n}\r\n\r\nfunction Show() {\r\n    const { id } = useParams()\r\n\r\n    const [{ show, isLoading, error }, dispatch] = useReducer(reducer, initialState);\r\n\r\n    // const [show, setshow] = useState(\"Component did mount \")\r\n    // const [isLoading, setLoading] = useState(true)\r\n    // const [error, setError] = useState(null)\r\n\r\n    // console.log(state)\r\n    useEffect(() => {\r\n\r\n        let isMounted = true\r\n\r\n        apiGet(`/shows/${id}?embed[]=seasons&embed[]=cast`)\r\n            .then(results => {\r\n                setTimeout(() => {\r\n                    if (isMounted) {\r\n                        dispatch({ type: 'FETCH_SUCCESS', show: results })\r\n                        // setshow(results);\r\n                        // setLoading(false);\r\n                    }\r\n                }, 2000)\r\n            }).catch(err => {\r\n                if (isMounted) {\r\n                    dispatch({ type: 'FETCH_FAILED', error: err.message })\r\n                    // setError(err.message)\r\n                    // setLoading(false);\r\n                }\r\n            })\r\n        return () => {\r\n            isMounted = false\r\n        }\r\n    }, [id])\r\n\r\n\r\n    console.log('show', show)\r\n    if (isLoading) {\r\n        return <div>Data is Loading</div>\r\n    }\r\n    if (error) {\r\n        return <div>Error occurred :{error}</div>\r\n    }\r\n\r\n    return <ShowPageWrapper>\r\n        <ShowMainData\r\n            image={show.image}\r\n            name={show.name}\r\n            rating={show.rating}\r\n            summary={show.summary}\r\n            tags={show.genres}\r\n        />\r\n        <InfoBlock>\r\n            <h2>Details</h2>\r\n            <Details\r\n                status={show.status}\r\n                network={show.network}\r\n                premiered={show.premiered}\r\n            />\r\n        </InfoBlock>\r\n\r\n        <InfoBlock>\r\n            <h2>Season</h2>\r\n            <Season seasons={show._embedded.seasons} />\r\n        </InfoBlock>\r\n\r\n        <InfoBlock>\r\n            <h2>Cast</h2>\r\n            <Cast cast={show._embedded.cast} />\r\n        </InfoBlock>\r\n    </ShowPageWrapper>\r\n}\r\n\r\nexport default Show\r\n","D:\\React Js\\New\\boxoffice\\src\\components\\show\\Details.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\show\\Season.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\show\\Cast.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\show\\ShowMainData.js",[],"D:\\React Js\\New\\boxoffice\\src\\pages\\Show.styled.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\show\\ShowMainData.style.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\show\\Details.style.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\show\\Seasons.Style.js",[],"D:\\React Js\\New\\boxoffice\\src\\components\\show\\Cast.style.js",[],"D:\\React Js\\New\\boxoffice\\src\\misc\\custom-hooks.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":29,"column":13,"nodeType":"133","messageId":"134","endLine":29,"endColumn":24},{"ruleId":"131","severity":1,"message":"132","line":50,"column":5,"nodeType":"133","messageId":"134","endLine":50,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":66,"column":5,"nodeType":"133","messageId":"134","endLine":66,"endColumn":16},"lines-around-directive",["135"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]